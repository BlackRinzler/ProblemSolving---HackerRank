# ===================================
#   Problem statement & information
# ===================================

# You are given an unordered array consisting of consecutive integers [1,2,3,..,n] without any duplicates. You are allowed to swap any two elements. Find the minimum number of swaps 
# required to sort the array in ascending order.

# Difficulty: Medium
# Max Score: 40
# Language: Python

# ===================================
#             Solutions
# ===================================

#!/bin/python3

import os    

def minimumSwaps(arr):
    num_swaps = 0
    if len(arr) < 2:
        return num_swaps
    for k in range(len(arr)):
        while arr[k] != k+1:
            pos = arr[k]-1
            arr[k], arr[pos] = arr[pos], arr[k]
            num_swaps += 1
    return num_swaps
            

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    n = int(input())

    arr = list(map(int, input().rstrip().split()))

    res = minimumSwaps(arr) 
    
    fptr.write(str(res) + '\n')

    fptr.close()
