# ===================================
#   Problem statement & information
# ===================================

# A left rotation operation on an array shifts each of the array's elements 1 unit to the left. For example, if 2 left rotations are performed on array [1,2,3,4,5], then the array would 
# become [3,4,5,1,2]. Note that the lowest index item moves to the highest index in a rotation. This is called a circular array.
#
# Given an array a of n integers and a number, d, perform d left rotations on the array. Return the updated array to be printed as a single line of space-separated integers.

# Difficulty: Easy
# Max Score: 20
# Language: Python

# ===================================
#             Solutions
# ===================================

#!/bin/python3

import os

def rotLeft(a, d):
    c = []
    for i in range(d):
        c.append(a[i])
    for k in range(d, len(a)):
        a[k-d] = a[k]
    a[:] = a[:(len(a)-d)] + c
    return a
    
def rotLeft2(a, d):
    a[:] = a[d:len(a)] + a[:d]
    return a

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    first_multiple_input = input().rstrip().split()

    n = int(first_multiple_input[0])

    d = int(first_multiple_input[1])

    a = list(map(int, input().rstrip().split()))

    result = rotLeft2(a, d)

    fptr.write(' '.join(map(str, result)))
    fptr.write('\n')

    fptr.close()
