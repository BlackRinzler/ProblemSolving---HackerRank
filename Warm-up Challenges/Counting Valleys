# ===================================
#   Problem statement & information
# ===================================

# An avid hiker keeps meticulous records of their hikes. During the last hike that took exactly 'steps' steps, for every step it was noted if it was an uphill, U, or a downhill, D step. 
# Hikes always start and end at sea level, and each step up or down represents a 1 unit change in altitude. We define the following terms:
# • A mountain is a sequence of consecutive steps above sea level, starting with a step up from sea level and ending with a step down to sea level.
# • A valley is a sequence of consecutive steps below sea level, starting with a step down from sea level and ending with a step up to sea level.
# Given the sequence of up and down steps during a hike, find and print the number of valleys walked through.

# Difficulty: Easy
# Max Score: 15
# Language: Python

# ===================================
#              Solution
# ===================================

#!/bin/python3

import os

def countingValleys(steps, path):
    num_val = 0
    sum_p = 0
    path = [-1 if k=='D' else 1 for k in path]
    for k in range(steps):
        sum_p += path[k]
        if sum_p == 0:
            if path[k] == 1:
                num_val +=1
    return num_val
        
if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    steps = int(input().strip())

    path = input()

    result = countingValleys(steps, path)

    fptr.write(str(result) + '\n')

    fptr.close()
